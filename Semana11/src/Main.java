public class Main {
    public static void main(String[] args) {
        Libro[] libros = {
                new Libro(3, "Clean Code", "Robert C. Martin"),
                new Libro(1, "El Quijote", "Cervantes"),
                new Libro(5, "Cien a√±os de soledad", "Garc√≠a M√°rquez"),
                new Libro(2, "La Odisea", "Homero"),
                new Libro(4, "1984", "George Orwell")
        };

        System.out.println("üìö Lista original:");
        for (Libro l : libros) {
            System.out.println(l);
        }

        // Ordenar por ID con Shell Sort
        System.out.println("\nüî¢ Ordenando por ID con Shell Sort...");
        long inicio = System.nanoTime();
        ShellSort.ordenarPorId(libros);
        long fin = System.nanoTime();
        System.out.println("‚è±Ô∏è Tiempo de ejecuci√≥n: " + (fin - inicio) + " ns");

        System.out.println("\nüìö Lista ordenada por ID:");
        for (Libro l : libros) {
            System.out.println(l);
        }

        // Ordenar por t√≠tulo con Shell Sort
        System.out.println("\nüî§ Ordenando por T√≠tulo con Shell Sort...");
        inicio = System.nanoTime();
        ShellSort.ordenarPorTitulo(libros);
        fin = System.nanoTime();
        System.out.println("‚è±Ô∏è Tiempo de ejecuci√≥n: " + (fin - inicio) + " ns");

        System.out.println("\nüìö Lista ordenada por T√≠tulo:");
        for (Libro l : libros) {
            System.out.println(l);
        }

        // Ordenar por ID con Quick Sort
        System.out.println("\n‚ö° Ordenando por ID con Quick Sort...");
        inicio = System.nanoTime();
        QuickSort.ordenarPorId(libros, 0, libros.length - 1);
        fin = System.nanoTime();
        System.out.println("‚è±Ô∏è Tiempo de ejecuci√≥n: " + (fin - inicio) + " ns");

        System.out.println("\nüìö Lista ordenada por ID (Quick Sort):");
        for (Libro l : libros) {
            System.out.println(l);
        }

        // Ordenar por T√≠tulo con Quick Sort
        System.out.println("\n‚ö° Ordenando por T√≠tulo con Quick Sort...");
        inicio = System.nanoTime();
        QuickSort.ordenarPorTitulo(libros, 0, libros.length - 1);
        fin = System.nanoTime();
        System.out.println("‚è±Ô∏è Tiempo de ejecuci√≥n: " + (fin - inicio) + " ns");

        System.out.println("\nüìö Lista ordenada por T√≠tulo (Quick Sort):");
        for (Libro l : libros) {
            System.out.println(l);
        }

        // ====================================
        // üìñ D√çA 3: Prueba con 1000 libros
        // ====================================
        System.out.println("\n\nüìñ D√≠a 3: Prueba con 1000 libros aleatorios");

        Libro[] milLibros1 = generarLibrosAleatorios(1000);
        Libro[] milLibros2 = milLibros1.clone(); // Copia exacta para comparar m√©todos

        // üî§ Ordenar por T√≠tulo con Shell Sort
        System.out.println("\nüî§ Ordenando 1000 libros por T√≠tulo con Shell Sort...");
        inicio = System.nanoTime();
        ShellSort.ordenarPorTitulo(milLibros1);
        fin = System.nanoTime();
        System.out.println("‚è±Ô∏è Tiempo Shell Sort: " + (fin - inicio) + " ns");

        // ‚ö° Ordenar por T√≠tulo con Quick Sort
        System.out.println("\n‚ö° Ordenando 1000 libros por T√≠tulo con Quick Sort...");
        inicio = System.nanoTime();
        QuickSort.ordenarPorTitulo(milLibros2, 0, milLibros2.length - 1);
        fin = System.nanoTime();
        System.out.println("‚è±Ô∏è Tiempo Quick Sort: " + (fin - inicio) + " ns");

        System.out.println("\n‚úÖ Ordenaci√≥n completada para los 1000 libros.");

        // Mostrar los primeros 10 libros ordenados para verificar
        System.out.println("\nüìò Primeros 10 t√≠tulos (Quick Sort):");
        for (int i = 0; i < 10; i++) {
            System.out.println(milLibros2[i]);
        }

        // Repetimos 3 veces para obtener un promedio m√°s fiable
        long[] tiemposShell = new long[3];
        long[] tiemposQuick = new long[3];

        for (int rep = 0; rep < 3; rep++) {
            Libro[] arrayShell = generarLibrosAleatorios(2000);
            Libro[] arrayQuick = arrayShell.clone();

            // Shell Sort
            inicio = System.nanoTime();
            ShellSort.ordenarPorTitulo(arrayShell);
            fin = System.nanoTime();
            tiemposShell[rep] = fin - inicio;

            // Quick Sort
            inicio = System.nanoTime();
            QuickSort.ordenarPorTitulo(arrayQuick, 0, arrayQuick.length - 1);
            fin = System.nanoTime();
            tiemposQuick[rep] = fin - inicio;
        }

// Calcular promedios
        long promedioShell = (tiemposShell[0] + tiemposShell[1] + tiemposShell[2]) / 3;
        long promedioQuick = (tiemposQuick[0] + tiemposQuick[1] + tiemposQuick[2]) / 3;

// Mostrar tabla en consola
        System.out.println("\n\nüìä Comparaci√≥n de tiempos (2000 libros)");
        System.out.println("‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê");
        System.out.println("‚îÇ Algoritmo     ‚îÇ Tiempo promedio (ns)   ‚îÇ");
        System.out.println("‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§");
        System.out.println("‚îÇ Shell Sort    ‚îÇ " + promedioShell + " ‚îÇ");
        System.out.println("‚îÇ Quick Sort    ‚îÇ " + promedioQuick + " ‚îÇ");
        System.out.println("‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò");

        if (promedioShell > promedioQuick) {
            System.out.println("\n‚úÖ Quick Sort fue m√°s r√°pido ");
        } else {
            System.out.println("\n‚úÖ Shell Sort fue m√°s r√°pido ");
        }
    }

    // ==============================
    // M√©todo para generar libros aleatorios
    // ==============================
    public static Libro[] generarLibrosAleatorios(int cantidad) {
        Libro[] libros = new Libro[cantidad];
        String[] palabras = {"Luz", "Sombra", "Destino", "Eterno", "Camino", "Silencio", "Tiempo", "Fuego", "Alma", "Cielo"};

        for (int i = 0; i < cantidad; i++) {
            String titulo = palabras[(int) (Math.random() * palabras.length)] + " " + (int) (Math.random() * 10000);
            String autor = "Autor " + (i + 1);
            libros[i] = new Libro(i + 1, titulo, autor);
        }
        return libros;
    }
}

